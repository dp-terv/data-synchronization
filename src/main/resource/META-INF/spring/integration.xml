<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-file="http://www.springframework.org/schema/integration/file"
	xmlns:int-xml="http://www.springframework.org/schema/integration/xml"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/integration/xml http://www.springframework.org/schema/integration/xml/spring-integration-xml.xsd">

	
	<!-- Null Channel, (dev/null) -->	
	<bean id="nullChannel" class="org.springframework.integration.channel.NullChannel" />
	
	<!-- File poller, filter a módosítás idejére -->

	<int-file:inbound-channel-adapter id="filesInChannel"
				filter="fileFilter"
				directory="${file.input.directory}" 
				channel="fileToTransformerChannel">
	    <int:poller id="poller" fixed-rate="${file.input.pollrate}" />
	</int-file:inbound-channel-adapter>
	<bean id="fileFilter" class="hu.bme.mit.v37zen.prepayment.util.integration.ModifiedFileFilter"/>

	<int:channel id="fileToTransformerChannel"></int:channel>

	<!-- File to DOM Document transformer -->
	
	<int:transformer id="xmlTransformer"
				input-channel="fileToTransformerChannel"  
				output-channel="toXMLHandler" 
				ref="defXmlTransormer" 
				method="convertToDocument">
	</int:transformer>
	<bean id="defXmlTransormer" class="org.springframework.integration.xml.DefaultXmlPayloadConverter"></bean>
	
	
	<int:channel id="toXMLHandler"></int:channel>
	
	<!-- Content Base Router -->
	
	<int:service-activator id="contentBasedRouterServiceActivator" 
			ref="contentBasedRouter"
			method="route"
			input-channel="toXMLHandler">
	</int:service-activator>
	
	<bean id="contentBasedRouter" class="hu.bme.mit.v37zen.prepayment.integration.ContentBasedRouter">
		<constructor-arg name="routingTable">
			<map>
				<entry key="syncMessageRoutingRule" value-ref="syncMessageRoutingRule" />
				<entry key="meterDataRoutingRule" value-ref="meterDataRoutingRule" />
			</map>
		</constructor-arg>
	</bean>	
	
	<!-- "RoutingTable" -->
	<bean id="syncMessageRoutingRule"  class="hu.bme.mit.v37zen.prepayment.integration.RoutingRule" scope="prototype">
		<constructor-arg name="namespaces">
			<ref bean="namespaceHandler" />
			<!-- Defined in: META-INF/context.xml -->
		</constructor-arg>
		<constructor-arg name="contentSelectorString" value="${dataSync.xpath.syncMessageSelectorString}" />
		<constructor-arg name="exceptedContent" value="${dataSync.xpath.syncMessageDistinctiveValue}" />
		<constructor-arg name="route">
			<ref bean="toSyncDataHandler" />
		</constructor-arg>
	</bean>
	
	<bean id="meterDataRoutingRule"  class="hu.bme.mit.v37zen.prepayment.integration.RoutingRule" scope="prototype">
		<constructor-arg name="namespaces">
			<ref bean="namespaceHandler" />
			<!-- Defined in: META-INF/context.xml -->
		</constructor-arg>
		<constructor-arg name="contentSelectorString" value="${meterData.xpath.meterDataMessageSelectorString}" />
		<constructor-arg name="exceptedContent" value="${meterData.xpath.meterDataMessageDistinctiveValue}" />
		<constructor-arg name="route">
			<ref bean="toMeterDataHandler" />
		</constructor-arg>
	</bean>
	
	<!-- "RoutingTable" END -->
	
	<int:channel id="toSyncDataHandler"></int:channel>
	
	<int:channel id="toMeterDataHandler"></int:channel>
	
	<int:service-activator id="SyncDataHandler" 
				ref="syncMessageHandler"
				method="process"
				input-channel="toSyncDataHandler">
	</int:service-activator>
	<bean id="syncMessageHandler"
			class="hu.bme.mit.v37zen.prepayment.datasync.SyncMessageHandler">
			<constructor-arg name="taskExecutorPool">
				<ref bean="dataSyncThreadPoolTaskExecutor" />
				<!-- Defined in: META-INF/context.xml -->
			</constructor-arg>
	</bean>
	
	<int:service-activator id="MeterDataHandler" 
				ref="meterMessageHandler"
				method="process"
				input-channel="toMeterDataHandler">
	</int:service-activator>
	<bean id="meterMessageHandler"
			class="hu.bme.mit.v37zen.prepayment.rating.MeterDataMessageHandler">
			<constructor-arg name="taskExecutorPool">
				<ref bean="meterDataThreadPoolTaskExecutor" />
				<!-- Defined in: META-INF/context.xml -->
			</constructor-arg>
	</bean>
</beans>
	
	<!-- Legacy Things -->
	
		<!-- DOM Document Handler -->
	
<!-- 	<int:service-activator id="dOMDocumentHandlerServiceActivator"  -->
<!-- 				ref="dOMDocumentHandler" -->
<!-- 				method="process" -->
<!-- 				input-channel="toXMLHandler"> -->
<!-- 	</int:service-activator> -->

<!-- 	<bean id="dOMDocumentHandler"  -->
<!-- 				class="hu.bme.mit.v37zen.prepayment.integration.DOMDocumentHandler"> -->
<!-- 				<constructor-arg name="toSyncDataHandlerChannel"> -->
<!-- 					<ref bean="toSyncDataHandler"/> -->
<!-- 				</constructor-arg> -->
<!-- 				<constructor-arg name="toMeterDataHandlerChannel"> -->
<!-- 					<ref bean="toMeterDataHandler"/> -->
<!-- 				</constructor-arg> -->
				
<!-- 				<property name="namespaceHandler"> -->
<!-- 					<ref bean="namespaceHandler" /> -->
<!-- 					Defined in: META-INF/context.xml -->
<!-- 				</property> -->
				
<!-- 				<property name="syncMessageSelectorString" value="${dataSync.xpath.syncMessageSelectorString}"></property> -->
<!-- 				<property name="syncMessageDistinctiveValue" value="${dataSync.xpath.syncMessageDistinctiveValue}"></property> -->
<!-- 				<property name="meterDataMessageSelectorString" value="${meterData.xpath.meterDataMessageSelectorString}"></property> -->
<!-- 				<property name="meterDataMessageDistinctiveValue" value="${meterData.xpath.meterDataMessageDistinctiveValue}"></property> -->
<!-- 	</bean> -->